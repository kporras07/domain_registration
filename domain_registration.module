<?php
/**
 * @file
 * Domain Registration module file.
 */

/**
 * Implements hook_form_form_id_form_alter().
 */
function domain_registration_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  $form['#validate'][] = 'domain_registration_user_register_validate';
}

/**
 * Custom validation function.
 * 
 * Checks if the domain in the email address is on a list of allowed domains.
 */
function domain_registration_user_register_validate(&$form, &$form_state) {
  $default_message = t('You are not allowed to register for an account on this site.');
  $mail = explode('@', $form_state->getValue('mail'));
  $domains = \Drupal::config('domain_registration.settings')->get('domain_registration');
  $domains = explode("\r\n", $domains);
  if (!empty($domains)) {
    switch (\Drupal::config('domain_registration.settings')->get('domain_registration_method')) {
      // Allow only domains listed to register.
      case 0:
        if (!in_array($mail[1], $domains)) {
          $form_state->setErrorByName('account', \Drupal::config('domain_registration.settings')->get('domain_registration_message'));
        }
        break;

      // Prevent domains listed from registering.
      case 1:
        if (in_array($mail[1], $domains)) {
          form_set_error('account', \Drupal::config('domain_registration.settings')->get('domain_registration_message'));
        }
        break;
    }
  }
}
